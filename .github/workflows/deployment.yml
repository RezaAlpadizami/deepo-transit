name: Docker Build - GKE Deploy

on:
  push:
    branches: [ "development" ]
    
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: deepo-main
  GKE_ZONE: asia-southeast2-a
  DEPLOYMENT_NAME: deepo-transit-ui
  DOCKER_REGISTRY_USERNAME: maulanardy
  IMAGE: deepo-transit-ui
  CONTAINER: deepo-transit-ui-1

jobs:
  build:
    name: build-images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_REACT_APP_MASTER: http://34.101.90.86/api/v1/
        envkey_REACT_APP_TRANSIT: http://34.101.212.18/api/v1/
        file_name: .env
      
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      
    - name: Build Docker image
      run: docker build . --file Dockerfile --tag maulanardy/$IMAGE:$GITHUB_SHA
      
    - name: Push Docker image
      run: docker push maulanardy/$IMAGE:$GITHUB_SHA
      
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Wait for build
      uses: lewagon/wait-on-check-action@v1.2.0
      with:
        ref: ${{ github.ref }}
        check-name: 'build-images'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10
    # Setup gcloud CLI
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Get the GKE credentials so we can deploy to the cluster
    - name: Get Credential
      uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_KEY }}

    # Deploy the Docker image to the GKE cluster
    - name: Trigger Rollout
      run: |-
        kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER=$DOCKER_REGISTRY_USERNAME/$IMAGE:$GITHUB_SHA
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
